serviceMetaInfo:
  host: http://notification-service
  port: 8000
  serviceAppName: notification-service # spring.application.name
  contextPath: /notifications

springConfig:
  security:
    oauth2:
      resource:
        user-info-uri: http://auth-service:5000/uaa/users/current

restapis:
  '/recipients/current':
    GET: 
      method: '<com.piggymetrics.notification.controller.RecipientController: com.piggymetrics.notification.domain.Recipient getCurrentNotificationsSettings(java.security.Principle)>'
      # method2: '<com.piggymetrics.notification.service.RecipientService: com.piggymetrics.notification.domain.Recipient findByAccountName(java.lang.String)>'
      # method3: '<com.piggymetrics.notification.repository.RecipientRepository: com.piggymetrics.notification.domain.Recipient findByAccountName(java.lang.String)>'
      # Another repository, with findBy<AccountName> method
      security:
        - Assert.hasLength(accountName)
        - principal.getName()
      parameters:
        principal:
          in: body
          type: java.security.Principal
      response:
        '200': 
          description: 'OK'
          data: 
            object: 'com.piggymetrics.notification.domain.Recipient'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not Found'

    PUT:
      method: '<com.piggymetrics.notification.controller.RecipientController: com.piggymetrics.notification.domain.Recipient saveCurrentNotificationsSettings(java.security.Principle, com.piggymetrics.notification.domain.Recipient)>'
      # method2: '<com.piggymetrics.notification.domain.Recipient void setAccountName(java.lang.String)>'
      # method3: '<com.piggymetrics.notification.domain.Recipient java.util.Map<com.piggymetrics.notification.domain.NotificationType, com.piggymetrics.notification.domain.NotificationSetting> getScheduledNotifications()>'
      # method4: '<org.springframework.data.repository.CrudRepository: com.piggymetrics.notification.domain.Recipient save(com.piggymetrics.notification.domain.Recipient)>'
      security:
        - principal.getName()
        - @Valid @RequestBody
      parameters:
        principal:
          in: body
          type: java.security.Principal
        recipient:
          in: body
          type: Recipient
      response:
        '200':
          description: 'OK'
          data:
            object: 'com.piggymetrics.notification.domain.Recipient'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not Found'

calls:
  'com.piggymetrics.notification.client.AccountServiceClient: com.piggymetrics.account.domain.Account getAccountByName(java.lang.String)>':
    serviceName: 'account-service'
    endpoint: '/accounts/{accountName}'
    httpMethod: GET
    parameters:
      name:
        in: path
        type: java.lang.String
    security:
      - oauth2.hasScope('server')
      - name.equals('demo')
      - Assert.hasLength(accountName)
      - @Valid
    # fallback method: